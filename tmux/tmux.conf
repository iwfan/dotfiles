# References:
#   https://github.com/gpakosz/.tmux
#   https://github.com/arcticicestudio/igloo/blob/master/snowblocks/tmux/tmux.conf

#+---------+
#+ Options +
#+---------+

# -- general -------------------------------------------------------------------
set-option -g default-shell "${SHELL}"
set -g default-command "${SHELL}"
set -g default-terminal "screen-256color" # colors!
# Enable 24-bit "True color" support
set -ga terminal-overrides ",*256col*:Tc"
# Change Cursor Shape in Neovim
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[ q'
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

setw -g xterm-keys on
set -s escape-time 0                     # faster command sequences
set -sg repeat-time 400                   # increase repeat timeout
set -s focus-events on

set -g history-limit 5000                 # boost history
# Use vi(m) key bindings in copy mode and in the status line
setw -g mode-keys vi
# Enable mouse mode
set -g mouse on

# -- display -------------------------------------------------------------------

set -g base-index 1                       # start windows numbering at 1
setw -g pane-base-index 1                 # make pane numbering consistent with windows

setw -g allow-rename      on
setw -g automatic-rename  on
set -g renumber-windows on                # renumber windows when a window is closed

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# activity
set -g monitor-activity on
set -g visual-activity off

# -- navigation ----------------------------------------------------------------

# Inherit current working directory for new windows/pane
bind C-c new-window -c "#{pane_current_path}"
bind C-s split-window -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录
bind C-v split-window -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录
bind C-x kill-pane

# window navigation
bind -r C-h previous-window               # select previous window
bind -r C-l next-window                   # select next window

# pane navigation
bind -r h select-pane -L                  # move left
bind -r j select-pane -D                  # move down
bind -r k select-pane -U                  # move up
bind -r l select-pane -R                  # move right
bind > swap-pane -D                       # swap current pane with the next one
bind < swap-pane -U                       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# -- list choice (tmux < 2.4) --------------------------------------------------

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'

# -- edit mode (tmux < 2.4) ----------------------------------------------------

# vi-edit is gone in tmux >= 2.4
run -b 'tmux bind -ct vi-edit H start-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit L end-of-line 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit q cancel 2> /dev/null || true'
run -b 'tmux bind -ct vi-edit Escape cancel 2> /dev/null || true'


# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode
bind v copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# -- buffers -------------------------------------------------------------------

bind b list-buffers                       # list paste buffers
bind p paste-buffer                       # paste from the top paste buffer
bind P choose-buffer                      # choose which buffer to paste from

#+-----------+
#+ Bootstrap +
#+-----------+

# If "tpm" is not already installed, automatically clone the repository and install all configured plugins.
if "test ! -d ~/.config/tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

#+---------+
#+ Plugins +
#+---------+

# prefix I   install
# prefix alt-u   uninstall
# prefix U   upgrade

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin "tmux-plugins/tmux-prefix-highlight"

#+-----------------------+
#+ Plugin Configurations +
#+-----------------------+

# {{{tmux-resurrect
set -g @resurrect-save 'c-S'
set -g @resurrect-restore 'c-R'
set -g @resurrect-capture-pane-contents 'on'
# save vim session
set -g @resurrect-strategy-vim 'session'
# save neovim session
set -g @resurrect-strategy-nvim 'session'
# }}}

# {{{tmux-continuum
set -g @continuum-save-interval '60' # 一小时备份一次
set -g @continuum-restore 'on'
set -g @resurrect-hook-post-restore-all 'tmux kill-session -t 0'
#}}}

# Import the local configuration file if it exists
if '[ -f ~/.config/tmux/tmux.theme.conf ]' 'source ~/.config/tmux/tmux.theme.conf'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
