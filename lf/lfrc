set shell sh
set shellopts '-eu'
set ifs "\n"
set mouse true
set number true
set relativenumber true
set cursorpreviewfmt ""
set scrolloff 5
set tabstop 4
set incsearch true
set incfilter true
set hiddenfiles '.git'
set info size:time
set drawbox true
set autoquit true
set previewer ~/.config/lf/lf_kitty_preview.sh
set cleaner ~/.config/lf/lf_kitty_clean.sh

cmd z %{{
  result="$(zoxide query --exclude $PWD $@ | sed 's/\\/\\\\/g;s/"/\\"/g')"
  lf -remote "send $id cd \"$result\""
}}

cmd zi ${{
  result="$(zoxide query -i | sed 's/\\/\\\\/g;s/"/\\"/g')"
  lf -remote "send $id cd \"$result\""
}}

cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        application/json) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd copy_filename %{{
  $(basename $f | pbcopy)
  echo "Copied: $(basename $f)"
}}

cmd copy_filepath %{{
  $(realpath $f | pbcopy)
  echo "Copied: $(realpath $f)"
}}

cmd trash %trash $fx

cmd change_dir %{{
  echo "$f" > /Users/f/dotfiles/lf/temp_dir
  lf -remote "send $id quit"
}}

map <enter> open
map <c-f> $lf -remote "send $id select $(fzf)"
map <c-o> $lf -remote "send $id cd $(fzf)"

map o change_dir
map A :push %mkdir<space>
map a :push %touch<space>
map x cut
map d trash
map D delete
map y copy
map Y copy_filename
map <c-y> copy_filepath
map zi zi
